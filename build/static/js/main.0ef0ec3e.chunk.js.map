{"version":3,"sources":["types/types.js","reducers/nominaReducer.js","store/store.js","reducers/authReducer.js","firebase/config-firebase.js","actions/nomina.js","components/Element.jsx","components/FormAdd.jsx","actions/auth.js","components/Navbar.jsx","pages/AppScreen.jsx","pages/LoginScreen.jsx","pages/RegisterScreen.jsx","routers/AuthRouter.jsx","routers/PrivateRouter.jsx","routers/PublicRouter.jsx","helpers/loadData.js","routers/AppRouter.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["types","initialState","data","reducers","combineReducers","auth","state","action","type","payload","nomina","filter","id","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","GoogleAuthProvider","crear","borrar","Element","fechaFormato","fecha","pago","dispatch","useDispatch","seconds","toDate","toLocaleDateString","onClick","getState","a","uid","doc","delete","borrarRegistro","className","FormAdd","useState","viewForm","setViewForm","nota","numero","notanueva","setnotanueva","htmlFor","value","onChange","e","target","name","datos","Date","collection","add","referencia","newData","login","displayName","Navbar","signOut","AppScreen","useSelector","map","elemento","LoginScreen","email","password","setData","handleChange","onSubmit","preventDefault","trim","includes","length","signInWithEmailAndPassword","then","user","emailAndPasswordLogin","signInWithPopup","to","RegisterScreen","password2","username","createUserWithEmailAndPassword","updateProfile","register","AuthRouter","exact","path","component","PrivateRouter","log","Component","resto","props","PublicRouter","loadData","get","response","forEach","nominaData","push","AppRouter","setLog","useEffect","onAuthStateChanged","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.0ef0ec3e.chunk.js","sourcesContent":["export const types = {\r\n  login: \"[Auth] login\",\r\n  logout: \"[Auth] logout\",\r\n\r\n  nominaAdd: \"[Nomina] add\",\r\n  nominaDelete: \"[Nomina] delete\",\r\n  nominaRead: \"[Nomina] read\",\r\n  nominaClean: \"[Nomina] clean\",\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  data: [],\r\n};\r\n\r\nexport const nominaReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.nominaAdd:\r\n      return {\r\n        ...state,\r\n        data: [...state.data, action.payload],\r\n      };\r\n\r\n    case types.nominaRead:\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n\r\n    case types.nominaDelete:\r\n      return {\r\n        ...state,\r\n        data: state.data.filter((nomina) => {\r\n          return nomina.id !== action.payload;\r\n        }),\r\n      };\r\n\r\n    case types.nominaClean:\r\n      return {\r\n        ...state,\r\n        data: [],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { nominaReducer } from \"../reducers/nominaReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  nomina: nominaReducer,\r\n});\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return action.payload;\r\n\r\n    case types.logout:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyAKTiTKTgMuQBjGUOYtDcIJc6bX50CG5EM',\r\n  authDomain: 'agenda-react-f9f62.firebaseapp.com',\r\n  projectId: 'agenda-react-f9f62',\r\n  storageBucket: 'agenda-react-f9f62.appspot.com',\r\n  messagingSenderId: '467549719036',\r\n  appId: '1:467549719036:web:068a430baeac9e63db4a79',\r\n  measurementId: 'G-CWWJEGG54E',\r\n}\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nconst db = firebase.firestore()\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport { firebase, db, googleAuthProvider }\r\n","import { db } from '../firebase/config-firebase'\r\nimport { types } from '../types/types'\r\n\r\nexport const crearRegistro = (pago) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid } = getState().auth\r\n\r\n    const datos = {\r\n      fecha: new Date().toLocaleDateString(),\r\n      pago,\r\n    }\r\n\r\n    const referencia = await db.collection(`${uid}/nominas/nomina`).add(datos)\r\n\r\n    const id = await referencia.id\r\n\r\n    const newData = {\r\n      ...datos,\r\n      id,\r\n    }\r\n\r\n    dispatch(crear(newData))\r\n  }\r\n}\r\n\r\nexport const leerRegistros = (data) => {\r\n  return {\r\n    type: types.nominaRead,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const crear = (data) => {\r\n  return {\r\n    type: types.nominaAdd,\r\n    payload: data,\r\n  }\r\n}\r\n\r\nexport const borrarRegistro = (id) => {\r\n  return async (dispatch, getState) => {\r\n    const { uid } = getState().auth\r\n\r\n    await db.doc(`${uid}/nominas/nomina/${id}`).delete()\r\n\r\n    dispatch(borrar(id))\r\n  }\r\n}\r\n\r\nexport const borrar = (id) => {\r\n  return {\r\n    type: types.nominaDelete,\r\n    payload: id,\r\n  }\r\n}\r\n\r\nexport const limpiar = () => {\r\n  return {\r\n    type: types.nominaClean,\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { borrarRegistro } from '../actions/nomina'\r\n\r\nconst Element = ({ data }) => {\r\n  const { fecha, pago, id } = data\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  let fechaFormato\r\n\r\n  if (fecha.seconds) {\r\n    const date = fecha.toDate()\r\n    fechaFormato = date.toLocaleDateString()\r\n  } else {\r\n    fechaFormato = fecha\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    dispatch(borrarRegistro(id))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <td>{fechaFormato}</td>\r\n      <td>{pago}</td>\r\n      <td>\r\n        <button onClick={handleDelete} className=\"btn red\">\r\n          <i className=\"material-icons\">delete_forever</i>\r\n        </button>\r\n      </td>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Element\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { crearRegistro } from '../actions/nomina'\r\n\r\nconst FormAdd = () => {\r\n  const dispatch = useDispatch()\r\n  const [viewForm, setViewForm] = useState(false)\r\n\r\n  const [notanueva, setnotanueva] = useState({\r\n    nota: null,\r\n    numero: null,\r\n  })\r\n\r\n  const { numero } = notanueva\r\n\r\n  const handleAdd = () => {\r\n    setViewForm(!viewForm)\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setnotanueva({\r\n      ...notanueva,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  const handleSave = () => {\r\n    const ncontacto = numero\r\n    dispatch(crearRegistro(ncontacto))\r\n    setnotanueva({\r\n      nota: null,\r\n      numero: null,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleAdd} className=\"btn amber darken-4\">\r\n        {!viewForm ? 'Agregar' : 'Cerrar'}\r\n      </button>\r\n      {viewForm && (\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n          {/*<div className=\"input-field col s12\">\r\n            <label htmlFor=\"icon_prefix1\">Titulo de la nota </label>\r\n            <input id=\"icon_prefix1\" type=\"text\" value={nota} onChange={handleChange} name=\"nota\" />\r\n      </div>*/}\r\n          <div className=\"input-field col s12\">\r\n            <label htmlFor=\"icon_prefix2\">Texto de la nota </label>\r\n            <input\r\n              id=\"icon_prefix2\"\r\n              type=\"text\"\r\n              value={numero}\r\n              onChange={handleChange}\r\n              name=\"numero\"\r\n            />\r\n          </div>\r\n\r\n          <button onClick={handleSave} className=\"btn cyan darken-3\">\r\n            Guardar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormAdd\r\n","import { types } from \"../types/types\";\r\n\r\nimport { firebase, googleAuthProvider } from \"../firebase/config-firebase\";\r\n\r\nexport const googleLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n      });\r\n  };\r\n};\r\n\r\nexport const emailAndPasswordLogin = (email, password) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n      });\r\n  };\r\n};\r\n\r\nexport const register = (email, password, username) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async ({ user }) => {\r\n        await user.updateProfile({ displayName: username });\r\n\r\n        dispatch(login(user.uid, user.displayName));\r\n      });\r\n  };\r\n};\r\n\r\nexport const login = (uid, displayName) => {\r\n  return {\r\n    type: types.login,\r\n    payload: {\r\n      uid,\r\n      displayName,\r\n    },\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n\r\n    dispatch({\r\n      type: types.logout,\r\n    });\r\n  };\r\n};\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../actions/auth'\r\nimport { limpiar } from '../actions/nomina'\r\n\r\nconst Navbar = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleLogout = () => {\r\n    dispatch(limpiar())\r\n    dispatch(logout())\r\n  }\r\n\r\n  return (\r\n    <nav className=\"deep-purple darken-3\">\r\n      <div className=\"nav-wrapper container center\">\r\n        <span className=\"brand-logo left\">Notas</span>\r\n        <ul id=\"nav-mobile\" className=\"right \">\r\n          <li>\r\n            <button onClick={handleLogout} className=\"btn red waves-effect waves-light \">\r\n              Salir\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Element from '../components/Element'\r\nimport FormAdd from '../components/FormAdd'\r\n\r\nimport Navbar from '../components/Navbar'\r\n\r\nconst AppScreen = () => {\r\n  const name = useSelector((state) => state.auth.displayName)\r\n\r\n  const data = useSelector((state) => state.nomina.data)\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n\r\n      <div className=\"container animate__animated animate__backInUp\">\r\n        <h4 className=\"center\">Bienvenido {name}.</h4>\r\n        <hr />\r\n\r\n        <FormAdd />\r\n\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Fecha</th>\r\n              <th>Nota</th>\r\n              <th>Borrar</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {data.map((elemento) => {\r\n              return (\r\n                <tr className=\"animate__animated animate__fadeInDown \" key={elemento.id}>\r\n                  <Element data={elemento} />\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n        <footer>\r\n          <p> Creado por Andy Santisteban</p>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AppScreen\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport GoogleButton from 'react-google-button'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { googleLogin, emailAndPasswordLogin } from '../actions/auth'\r\n\r\nconst LoginScreen = () => {\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n\r\n  const { email, password } = data\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value\r\n\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: value,\r\n    })\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleGoogleLogin = () => {\r\n    dispatch(googleLogin())\r\n  }\r\n\r\n  const handleEmailLogin = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (email.trim() === '' || !email.trim().includes('@')) {\r\n      return\r\n    }\r\n\r\n    if (password.trim().length < 6) {\r\n      return\r\n    }\r\n\r\n    dispatch(emailAndPasswordLogin(email, password))\r\n  }\r\n\r\n  return (\r\n    <div className=\"container animate__animated animate__zoomIn\">\r\n      <h3>Notas</h3>\r\n      <hr />\r\n\r\n      <div className=\"row container\">\r\n        <form onSubmit={handleEmailLogin} className=\"col s12\">\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s12\">\r\n              <i className=\"material-icons prefix\">email</i>\r\n              <input\r\n                onChange={handleChange}\r\n                value={email}\r\n                name=\"email\"\r\n                id=\"icon_prefix1\"\r\n                className=\"materialize-textarea\"\r\n                type=\"email\"\r\n              />\r\n              <label htmlFor=\"icon_prefix1\">Email</label>\r\n            </div>\r\n            <div className=\"input-field col s12\">\r\n              <i className=\"material-icons prefix\">vpn_key</i>\r\n              <input\r\n                onChange={handleChange}\r\n                value={password}\r\n                name=\"password\"\r\n                id=\"icon_prefix2\"\r\n                className=\"materialize-textarea\"\r\n                type=\"password\"\r\n              />\r\n              <label htmlFor=\"icon_prefix2\">Password</label>\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"btn waves-effect waves-light\" type=\"submit\">\r\n            Ingresar\r\n          </button>\r\n          <hr />\r\n          <GoogleButton onClick={handleGoogleLogin} />\r\n          <Link to=\"/auth/register\">Register </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { register } from '../actions/auth'\r\n\r\nconst RegisterScreen = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n    username: '',\r\n  })\r\n\r\n  const { email, username, password, password2 } = data\r\n\r\n  const handleChange = (e) => {\r\n    const value = e.target.value\r\n\r\n    setData({\r\n      ...data,\r\n      [e.target.name]: value,\r\n    })\r\n  }\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (email.trim() === '' || !email.trim().includes('@')) {\r\n      return\r\n    }\r\n\r\n    if (username.trim().length < 2) {\r\n      return\r\n    }\r\n\r\n    if (password.trim().length < 6) {\r\n      return\r\n    } else {\r\n      if (password.trim() !== password2.trim()) {\r\n        return\r\n      }\r\n    }\r\n\r\n    dispatch(register(email, password, username))\r\n  }\r\n\r\n  return (\r\n    <div className=\"container animate__animated animate__zoomIn\">\r\n      <h3>Register</h3>\r\n      <hr />\r\n\r\n      <div className=\"row container\">\r\n        <form onSubmit={handleRegister} className=\"col s12\">\r\n          <div className=\"row\">\r\n            <div className=\"input-field col s12\">\r\n              <i className=\"material-icons prefix\">email</i>\r\n              <input\r\n                onChange={handleChange}\r\n                value={email}\r\n                id=\"icon_prefix1\"\r\n                className=\"materialize-textarea\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n              />\r\n              <label htmlFor=\"icon_prefix1\">Email</label>\r\n            </div>\r\n            <div className=\"input-field col s12\">\r\n              <i className=\"material-icons prefix\">assignment_ind</i>\r\n              <input\r\n                onChange={handleChange}\r\n                value={username}\r\n                id=\"icon_prefix2\"\r\n                className=\"materialize-textarea\"\r\n                name=\"username\"\r\n                type=\"text\"\r\n              />\r\n              <label htmlFor=\"icon_prefix2\">Username</label>\r\n            </div>\r\n            <div className=\"input-field col s12\">\r\n              <i className=\"material-icons prefix\">vpn_key</i>\r\n              <input\r\n                onChange={handleChange}\r\n                value={password}\r\n                id=\"icon_prefix3\"\r\n                className=\"materialize-textarea\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n              />\r\n              <label htmlFor=\"icon_prefix3\">Password</label>\r\n            </div>\r\n            <div className=\"input-field col s12\">\r\n              <i className=\"material-icons prefix\">vpn_key</i>\r\n              <input\r\n                onChange={handleChange}\r\n                value={password2}\r\n                id=\"icon_prefix4\"\r\n                className=\"materialize-textarea\"\r\n                name=\"password2\"\r\n                type=\"password\"\r\n              />\r\n              <label htmlFor=\"icon_prefix4\">Confirm Password</label>\r\n            </div>\r\n          </div>\r\n\r\n          <button className=\"btn waves-effect waves-light\" type=\"submit\">\r\n            Enviar\r\n          </button>\r\n          <hr />\r\n          <Link to=\"/auth/login\">Login into account</Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import { Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport LoginScreen from \"../pages/LoginScreen\";\r\nimport RegisterScreen from \"../pages/RegisterScreen\";\r\n\r\nconst AuthRouter = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n      <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n\r\n      <Redirect to=\"/auth/login\" />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AuthRouter;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nconst PrivateRouter = ({ log, component: Component, ...resto }) => {\r\n  return (\r\n    <Route\r\n      {...resto}\r\n      component={(props) =>\r\n        log ? <Component {...props} /> : <Redirect to=\"/auth/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRouter;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nconst PublicRouter = ({ log, component: Component, ...resto }) => {\r\n  return (\r\n    <Route\r\n      {...resto}\r\n      component={(props) =>\r\n        log ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRouter;\r\n","import { db } from \"../firebase/config-firebase\";\r\n\r\nexport const loadData = async (uid) => {\r\n  const response = await db.collection(`${uid}/nominas/nomina`).get();\r\n  const data = [];\r\n\r\n  response.forEach((nomina) => {\r\n    const nominaData = nomina.data();\r\n\r\n    data.push({\r\n      id: nomina.id,\r\n      ...nominaData,\r\n    });\r\n  });\r\n\r\n  return data;\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport AppScreen from \"../pages/AppScreen\";\r\nimport AuthRouter from \"./AuthRouter\";\r\nimport PrivateRouter from \"./PrivateRouter\";\r\n\r\nimport { login } from \"../actions/auth\";\r\nimport { firebase } from \"../firebase/config-firebase\";\r\nimport PublicRouter from \"./PublicRouter\";\r\nimport { loadData } from \"../helpers/loadData\";\r\nimport { leerRegistros } from \"../actions/nomina\";\r\n\r\nconst AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [log, setLog] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        dispatch(login(user.uid, user.displayName));\r\n        setLog(true);\r\n\r\n        const nominaData = await loadData(user.uid);\r\n\r\n        dispatch(leerRegistros(nominaData));\r\n      } else {\r\n        setLog(false);\r\n      }\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <PublicRouter path=\"/auth\" component={AuthRouter} log={log} />\r\n        <PrivateRouter exact path=\"/\" log={log} component={AppScreen} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store/store\";\n\nimport AppRouter from \"./routers/AppRouter\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n\nreportWebVitals();\n"],"sourceRoot":""}